# -*- coding: utf-8 -*-
"""Марвел

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16ZlO2n5JiipuUck-xDlmVR1T4bjuA4U9

Подробная информация о персонажах фильмов Marvel, включая названия фильмов и их персонажей, а также внешний вид актёров, и когда они впервые появились на экране.
"""

import numpy as np 
import pandas as pd
import re
import plotly.express as px
import matplotlib.pyplot as plt

marvel=pd.read_csv('Marvel Movies.csv', encoding = "cp1251", sep = ',' )
marvel.head(10)

marvel.shape

marvel.info()

"""Я обнаружил, что имя персонажа рядом с настоящим именем выглядит плохо, я думаю, будет лучше, если мы отделим имя персонажа."""

nicknames=[]
names=[]
for name in marvel.name:
   match= re.search("\((?:(?!\))(?:.|\n))*\)",name)
   if match:
    nickname=name[match.start()+1:match.end()-1]
    newname=name.replace(name[match.start():match.end()],"")
    names.append(newname)
    nicknames.append(nickname)
   else:
    names.append(np.nan)
    nicknames.append(np.nan)

marvel['nicknames']=names
marvel['name']=nicknames
marvel.head()

"""# 1) Какой пол самый популярный"""

gendre=marvel.SEX.value_counts()
px.bar(gendre,text_auto='.4s')

"""# 2) Доля живых и умерших"""

marvel.ALIVE.unique()

len(marvel[marvel['ALIVE']=="Living Characters"])/len(marvel)

len(marvel[marvel['ALIVE']=="Deceased Characters"])/len(marvel)

"""Большинство персонажей еще живы

# 3) Появление  новых персонажей на протяжении лет.
"""

years=marvel.Year.value_counts().sort_index()
px.line(years)

"""Пик пришолся на 1993 год

# 4) Наиболее часто используемый тип глаз.
"""

eye=marvel.EYE.value_counts().sort_values().head()
px.bar(eye,orientation='h')

"""# 5) Наиболее часто используемый тип волос"""

hair=marvel.HAIR.value_counts().sort_values(ascending=False)
px.bar(hair)

"""# 6) Соотношение цвета глаз и цвета волос"""

marvel.groupby(['EYE','HAIR']).count().name.nlargest(10)

dfg=marvel.groupby(['EYE','HAIR']).count().name.nlargest(10)
ax = dfg.unstack(level=0).plot(kind='bar', subplots=True, rot=40, figsize=(20, 20), layout=(6, 5))
plt.tight_layout()